#ifndef __SHARED_CONSTANTS__H
#define __SHARED_CONSTANTS__H

#include <cstddef>
#include <cstdint>
#include <vector>

namespace Precision{
    using byte_type = std::int_least8_t;
    template <typename... TArgs>
        using default_container_type = std::vector<TArgs...>;

    constexpr std::size_t
        k_default_prec = 100,
        k_display_prec = 5
    ;

    struct Constant{
        static constexpr char symbols[] = "+-.E /i";
    };

    namespace Math{
        char const *const k_pi_str
            = "3.1415926535897932384626433832795028841"
            "9716939937510582097494459230781640628620899862803482534"
            "2117067982148086513282306647093844609550582231725359408"
            "1284811174502841027019385211055596446229489549303819644"
            "2881097566593344612847564823378678316527120190914564856"
            "6923460348610454326648213393607260249141273724587006606"
            "3155881748815209209628292540917153643678925903600113305"
            "3054882046652138414695194151160943305727036575959195309"
            "2186117381932611793105118548074462379962749567351885752"
            "7248912279381830119491298336733624406566430860213949463"
            "9522473719070217986094370277053921717629317675238467481"
            "8467669405132000568127145263560827785771342757789609173"
            "6371787214684409012249534301465495853710507922796892589"
            "2354201995611212902196086403441815981362977477130996051"
            "8707211349999998372978049951059731732816096318595024459"
            "4553469083026425223082533446850352619311881710100031378"
            "3875288658753320838142061717766914730359825349042875546"
            "8731159562863882353787593751957781857780532171226806613"
            "00192787661119590921642019"
        ;

        char const *const k_e_str
            = "2.718281828459045235360287471352662497757247093699959"
            "5749669676277240766303535475945713821785251664274274663"
            "9193200305992181741359662904357290033429526059563073813"
            "2328627943490763233829880753195251019011573834187930702"
            "1540891499348841675092447614606680822648001684774118537"
            "4234544243710753907774499206955170276183860626133138458"
            "3000752044933826560297606737113200709328709127443747047"
            "2306969772093101416928368190255151086574637721112523897"
            "8442505695369677078544996996794686445490598793163688923"
            "0098793127736178215424999229576351482208269895193668033"
            "1825288693984964651058209392398294887933203625094431173"
            "0123819706841614039701983767932068328237646480429531180"
            "2328782509819455815301756717361332069811250996181881593"
            "0416903515988885193458072738667385894228792284998920868"
            "0582574927961048419844436346324496848756023362482704197"
            "8623209002160990235304369941849146314093431738143640546"
            "2531520961836908887070167683964243781405927145635490613"
            "0310720851038375051011574770417189861068739696552126715"
            "46889570350354"
        ;

        char const *const k_ln2_str
            = "0.693147180559945309417232121458176568075500134360255"
            "2541206800094933936219696947156058633269964186875420014"
            "81020570685733685520235758130557032670751393"
        ;
    }
}

#endif